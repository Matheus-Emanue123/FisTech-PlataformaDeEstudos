generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Anotacao {
  id           Int       @id @default(autoincrement())
  texto        String    @db.Text
  user_id      Int?
  topico_id    Int?
  data_criacao DateTime? @default(now()) @db.DateTime(0)
  Usuario      Usuario?  @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "Anotacao_ibfk_1")
  Topico       Topico?   @relation(fields: [topico_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "Anotacao_ibfk_2")

  @@index([topico_id], map: "topico_id")
  @@index([user_id], map: "user_id")
}

model Assunto {
  id        Int      @id @default(autoincrement())
  descricao String?  @db.Text
  nome      String   @db.VarChar(100)
  Topico    Topico[]
}

model Comentario {
  id           Int       @id @default(autoincrement())
  texto        String    @db.Text
  data_criacao DateTime? @default(now()) @db.DateTime(0)
  removido     Boolean?  @default(false)
  user_id      Int?
  conteudo_id  Int?
  Usuario      Usuario?  @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "Comentario_ibfk_1")
  Conteudo     Conteudo? @relation(fields: [conteudo_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "Comentario_ibfk_2")

  @@index([conteudo_id], map: "conteudo_id")
  @@index([user_id], map: "user_id")
}

model Conteudo {
  id               Int               @id @default(autoincrement())
  titulo           String            @db.VarChar(255)
  descricao        String?           @db.Text
  url_video        String?           @db.VarChar(255)
  tipo             String?           @db.VarChar(50)
  data_criacao     DateTime?         @default(now()) @db.DateTime(0)
  topico_id        Int?
  nivel_id         Int?
  criado_por       Int?
  questao_id       Int?
  Comentario       Comentario[]
  Topico           Topico?           @relation(fields: [topico_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "Conteudo_ibfk_1")
  NivelDificuldade NivelDificuldade? @relation(fields: [nivel_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "Conteudo_ibfk_2")
  Usuario          Usuario?          @relation(fields: [criado_por], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "Conteudo_ibfk_3")
  Questao          Questao?          @relation(fields: [questao_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "Conteudo_ibfk_4")

  @@index([criado_por], map: "criado_por")
  @@index([nivel_id], map: "nivel_id")
  @@index([questao_id], map: "questao_id")
  @@index([topico_id], map: "topico_id")
}

model MapaMental {
  id           Int       @id @default(autoincrement())
  arquivo_url  String?   @db.VarChar(255)
  data_criacao DateTime? @default(now()) @db.DateTime(0)
  user_id      Int?
  topico_id    Int?
  Usuario      Usuario?  @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "MapaMental_ibfk_1")
  Topico       Topico?   @relation(fields: [topico_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "MapaMental_ibfk_2")

  @@index([topico_id], map: "topico_id")
  @@index([user_id], map: "user_id")
}

model NivelDificuldade {
  id               Int                @id @default(autoincrement())
  xp               Int
  nome             String             @db.VarChar(50)
  Conteudo         Conteudo[]
  Questao          Questao[]
  QuestaoResolvida QuestaoResolvida[]
}

model Questao {
  id               Int                @id @default(autoincrement())
  enunciado        String             @db.Text
  ano              Int?
  origem           String?            @db.VarChar(100)
  fase             String?            @db.VarChar(50)
  alternativas     Json?
  data_criacao     DateTime?          @default(now()) @db.DateTime(0)
  resolvido        Boolean?
  nivel_id         Int?
  criado_por       Int?
  Conteudo         Conteudo[]
  NivelDificuldade NivelDificuldade?  @relation(fields: [nivel_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "Questao_ibfk_1")
  Usuario          Usuario?           @relation(fields: [criado_por], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "Questao_ibfk_2")
  QuestaoResolvida QuestaoResolvida[]

  @@index([criado_por], map: "criado_por")
  @@index([nivel_id], map: "nivel_id")
}

model QuestaoResolvida {
  id               Int               @id @default(autoincrement())
  data_resolucao   DateTime?         @default(now()) @db.DateTime(0)
  acerto           Boolean?
  id_user          Int?
  id_questao       Int?
  nivel_id         Int?
  Usuario          Usuario?          @relation(fields: [id_user], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "QuestaoResolvida_ibfk_1")
  Questao          Questao?          @relation(fields: [id_questao], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "QuestaoResolvida_ibfk_2")
  NivelDificuldade NivelDificuldade? @relation(fields: [nivel_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "QuestaoResolvida_ibfk_3")

  @@index([id_questao], map: "id_questao")
  @@index([id_user], map: "id_user")
  @@index([nivel_id], map: "nivel_id")
}

model Resumo {
  id           Int       @id @default(autoincrement())
  texto        String    @db.Text
  data_criacao DateTime? @default(now()) @db.DateTime(0)
  user_id      Int?
  topico_id    Int?
  Usuario      Usuario?  @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "Resumo_ibfk_1")
  Topico       Topico?   @relation(fields: [topico_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "Resumo_ibfk_2")

  @@index([topico_id], map: "topico_id")
  @@index([user_id], map: "user_id")
}

model Topico {
  id         Int          @id @default(autoincrement())
  nome       String       @db.VarChar(100)
  descricao  String?      @db.Text
  assunto_id Int?
  Anotacao   Anotacao[]
  Conteudo   Conteudo[]
  MapaMental MapaMental[]
  Resumo     Resumo[]
  Assunto    Assunto?     @relation(fields: [assunto_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "Topico_ibfk_1")

  @@index([assunto_id], map: "assunto_id")
}

model UserType {
  id      Int           @id @default(autoincrement())
  tipo    UserType_tipo
  Usuario Usuario[]
}

model UserXP {
  user_id       Int       @id
  xp_total      Int
  atualizado_em DateTime? @default(now()) @db.DateTime(0)
  Usuario       Usuario   @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "UserXP_ibfk_1")
}

model Usuario {
  id               Int                @id @default(autoincrement())
  nome             String             @db.VarChar(100)
  email            String             @db.VarChar(100)
  senha_hash       String             @db.VarChar(255)
  data_criacao     DateTime?          @default(now()) @db.DateTime(0)
  ultimo_login     DateTime?          @db.DateTime(0)
  user_type_id     Int?
  Anotacao         Anotacao[]
  Comentario       Comentario[]
  Conteudo         Conteudo[]
  MapaMental       MapaMental[]
  Questao          Questao[]
  QuestaoResolvida QuestaoResolvida[]
  Resumo           Resumo[]
  UserXP           UserXP?
  UserType         UserType?          @relation(fields: [user_type_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "Usuario_ibfk_1")

  @@index([user_type_id], map: "user_type_id")
}

enum UserType_tipo {
  administrador
  moderador
  usuario_padrao
}
